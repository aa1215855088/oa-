<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnguigu.oa.dao.OaDepartmentMapper">
    <resultMap id="BaseResultMap" type="com.hnguigu.oa.domain.OaDepartment">
        <id column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="department_name" jdbcType="VARCHAR" property="departmentName"/>
        <result column="department_description" jdbcType="VARCHAR" property="departmentDescription"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="department_level" jdbcType="INTEGER" property="departmentLevel"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        department_id, department_name, department_description, parent_id, department_level
    </sql>
    <select id="selectByExample" parameterType="com.hnguigu.oa.domain.OaDepartmentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from oa_department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oa_department
        where department_id = #{departmentId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from oa_department
        where department_id = #{departmentId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.hnguigu.oa.domain.OaDepartmentExample">
        delete from oa_department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hnguigu.oa.domain.OaDepartment">
        insert into oa_department (department_id, department_name, department_description, parent_id, department_level)
        values (#{departmentId,jdbcType=INTEGER},
                #{departmentName,jdbcType=VARCHAR},
                #{departmentDescription,jdbcType=VARCHAR},
                #{parentId,jdbcType=INTEGER},
                #{departmentLevel,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.hnguigu.oa.domain.OaDepartment">
        insert into oa_department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="departmentName != null">
                department_name,
            </if>
            <if test="departmentDescription != null">
                department_description,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="departmentLevel != null">
                department_level,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="departmentName != null">
                #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="departmentDescription != null">
                #{departmentDescription,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="departmentLevel != null">
                #{departmentLevel,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hnguigu.oa.domain.OaDepartmentExample" resultType="java.lang.Long">
        select count(*) from oa_department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update oa_department
        <set>
            <if test="record.departmentId != null">
                department_id = #{record.departmentId,jdbcType=INTEGER},
            </if>
            <if test="record.departmentName != null">
                department_name = #{record.departmentName,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentDescription != null">
                department_description = #{record.departmentDescription,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.departmentLevel != null">
                department_level = #{record.departmentLevel,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update oa_department
        set department_id = #{record.departmentId,jdbcType=INTEGER},
        department_name = #{record.departmentName,jdbcType=VARCHAR},
        department_description = #{record.departmentDescription,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=INTEGER},
        department_level = #{record.departmentLevel,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hnguigu.oa.domain.OaDepartment">
        update oa_department
        <set>
            <if test="departmentName != null">
                department_name = #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="departmentDescription != null">
                department_description = #{departmentDescription,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="departmentLevel != null">
                department_level = #{departmentLevel,jdbcType=INTEGER},
            </if>
        </set>
        where department_id = #{departmentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hnguigu.oa.domain.OaDepartment">
        update oa_department
        set department_name        = #{departmentName,jdbcType=VARCHAR},
            department_description = #{departmentDescription,jdbcType=VARCHAR},
            parent_id              = #{parentId,jdbcType=INTEGER},
            department_level       = #{departmentLevel,jdbcType=INTEGER}
        where department_id = #{departmentId,jdbcType=INTEGER}
    </update>

    <select id="findAll" resultType="oaDepartment">
        select *
        from oa_department;
    </select>
</mapper>